---
title: "analysis"
format: html
editor: visual
---

## Todo

-   Review the cohorts

## Known Issues

-   The oldest Finnish cohort has perfect prediction, needs to be joined up somehow, then there are a bunch of extra cohorts that have too few marriages.

-   The UK has a bunch of 0 weight observations - these are extension statistics for (1500 Scotland and Wales, 2000 Northern Ireland) - these should be thrown out, they are for making separate analyses of those countries, the original sample is nationally representative

-   UK BHPS and German surveys have a lot of missing values on education

    -   UK BHPS had very sparse education records

    -   UK BHPS also has patchy start dates of first unions

    -   I think I will just get rid of them from the analysis, seeing especially as I've got GGS for them now

-   Hungary gets deleted because it's missing a nativity indicator - should add a category missing by design, so does a whole survey in Netherlands

-   Spain, Polish, and 1997 US additional data sets in the original data set are exclusively women

-   2nd spanish dataset also has overwhelming majority of women

## Initial setup

```{r library}
# General functionality
library(tidyverse)
library(flextable)
library(officer)

# For importing the data
library(sjmisc)
library(haven)
library(janitor)
library(countrycode)

# model evaluation
library(broom)
library(marginaleffects)
library(sandwich)
library(lmtest)

# possible speeding up models
library(speedglm)

# meta-regression
library(metafor)

# MAAS from speedglm messes with this
select <- dplyr::select
```

```{r issue-button}
# countries with missing ISLEDs
analysis_select |> filter(is.na(isled)) |> group_by(country, round, isced_7) |> summarise(n = n_distinct(respid)) |> print(n=500)

# countries with missing foreign_born
analysis_select |> filter(is.na(foreign_born)) |> group_by(country, round, foreign_born) |> summarise(n = n_distinct(respid)) |> print(n=500)

```

## Preparation

Consider whether you want to do winsorization

```{r weights}
analysis_select <- analysis_select |> 
  mutate(
    naive_perswgt = if_else(is.na(perswgt), 1, perswgt)
  )
```

## Creation of country-cohorts and analytical sample

```{r country-cohorts}
analysis_proper <- analysis_select |>
  
  # add model covariates
  drop_na(isled, time, enrol_mod, foreign_born, male, in_union) |>
  
  mutate(
    marriage_cohort = born_y + 15, 
    marriage_cohort_cat = case_when(
      country == "Austria" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1985, 2006, by = 10), Inf),
                          labels = c("Before 1985", "1985-1994", "1995-2005", "After 2005"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Belarus" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), 2005, 2014),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "1991-2004", "2005-2014"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Belgium" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "After 1990"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Bulgaria" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "After 1990"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Czechia" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), 2005, Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "1991-2004", "after 2004"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Denmark" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), 2005, Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "1991-2004", "after 2004"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Estonia" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), 2005, Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "1991-2004", "after 2004"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Finland" ~ cut(marriage_cohort,
                          breaks = c(-Inf, 1985, 1996, 2005, Inf),
                          labels = c("Before 1985", "1985-1995", "1996-2004", "After 2004"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "France" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), 2005, Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "1991-2004", "after 2004"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Georgia" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "after 1990"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Italy" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), 2005, Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "1991-2004", "after 2004"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Lithuania" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "after 1990"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Norway" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), 2005, Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "1991-2004", "after 2003"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Romania" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "after 1990"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Russia" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "after 1990"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Spain" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1981, 1991, by = 10), 2005, Inf),
                          labels = c("Before 1981", "1981-1990", "1991-2004", "After 2004"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Sweden" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "after 1990"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "United Kingdom" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), 2005, Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "1991-2004", "after 2004"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Uruguay" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), 2005, Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "1991-2004", "after 2004"),
                          right = FALSE,
                          include.lowest = TRUE),
      
      country == "Canada" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 1991, by = 10), Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "after 1990"),
                          right = FALSE,
                          include.lowest = TRUE),
      
      country == "Netherlands" ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 2011, by = 10), Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "1991-2000", "2001-2010", "After 2010"),
                          right = FALSE,
                          include.lowest = TRUE),
      country == "Croatia" ~ cut(marriage_cohort,
                          breaks = c(-Inf, 1985, 1996, 2005, 2011, Inf),
                          labels = c("Before 1985", "1985-1995", "1996-2004", "2005-2010", "After 2010"),
                          right = FALSE,
                          include.lowest = TRUE),
      
      # For any country I don't manually look at
      TRUE ~ cut(marriage_cohort,
                          breaks = c(-Inf, seq(1951, 2021, by = 10), Inf),
                          labels = c("Before 1951", "1951-1960", "1961-1970", 
                                     "1971-1980", "1981-1990", "1991-2000", 
                                     "2001-2010", "2011-2020", "After 2020"),
                          right = FALSE,
                          include.lowest = TRUE)
    ),
    
    country_cohort = paste0(country, "_", marriage_cohort_cat),
    
    # between country standardisation
    isled_standard = scale(isled)[,1]
  )
```

Country cohorts in need of being joined up

```{r}
analysis_proper |> group_by(country_cohort) |> count(event) |> filter(n<101)
```

## Connecting macro-indicators to country-cohorts

```{r scoring-country-cohorts}
macro_weighted <- analysis_proper |> 
  group_by(country, country_cohort, obs_year) |> 
  
  # number of Rs observed each year
  summarise(
    pweight = sum(naive_perswgt),
    .groups = "drop"
  ) |> 
  
  group_by(country_cohort) |> 
  
  # total years observed within each country-cohort
  mutate(
    totpweight = sum(pweight),
    oweight = pweight/totpweight, # percentage of union_years observed in each period
    cumweight = cumsum(oweight) # cumulative share of union_years observed
  ) |> 
  ungroup() |>
  dplyr::select(-pweight, -totpweight) |>
   
  
  # add the interpolated macrodata (onto each year)
  left_join(macro_indicators_interpolated |> rename(obs_year = time), by = c("country", "obs_year")) |> 
  
  group_by(country_cohort) |>
  
  # share of union years covered by each time series (e. g. 65% of union years experienced when the time series ends, and 35% of union were experienced by the time it began so in total the time series covers 30% of all union years experienced in a country-cohort - that being it's weight in the calculation then)
  mutate(
    across(
      .cols = where(is.numeric) & !any_of(c("obs_year", "oweight", "cumweight")),
      .fns = ~if(all(is.na(.))) 0 else 
              max(cumweight[!is.na(.)], na.rm = TRUE) - 
              min(cumweight[!is.na(.)], na.rm = TRUE),
      .names = "cov_{.col}"
    )
  ) |>
  ungroup() |>
  
  # aggregating the macro-level indicators for each country-cohort, weighted mean (years experienced by more respondents count for more)
  group_by(country, country_cohort) |>
  summarise(
    across(
      where(is.numeric) & !c(oweight, cumweight),
      ~if(startsWith(cur_column(), "cov_")) first(.) else weighted.mean(., oweight, na.rm = TRUE)
    ),
    .groups = "drop"
  )
```

## Descriptives

## Modelling micro-level

```{r models-micro}
# Model 1: Education + intercept
m1_speed <- speedglm(event ~ isled_standard,
          data = analysis_proper,
          family = binomial(link = "logit"),
          weights = naive_perswgt)

# Model 2: Education + intercept by context (country-cohort)
m2_speed <- speedglm(event ~ isled_standard + country_cohort - 1,
          data = analysis_proper,
          family = binomial(link = "logit"),
          weights = naive_perswgt)

# Model 3: Education + intercept by context + controls
m3_speed <- speedglm(event ~ isled_standard + time + I(time^2) + male + in_union + enrol_mod + foreign_born + country_cohort - 1,
          data = analysis_proper,
          family = binomial(link = "logit"),
          weights = naive_perswgt)

# Model 4: Education × context + intercept by context + controls
m4_speed <- speedglm(event ~ isled_standard:country_cohort + time + I(time^2) + male + in_union +  enrol_mod + foreign_born + country_cohort - 1,
          data = analysis_proper,
          family = binomial(link = "logit"),
          weights = naive_perswgt)
```

## AMEs

```{r speed-AME}
# Calculating AMEs with just 20 percent of the sample (otherwise it takes ages)
set.seed(48103)

analysis_sample <- analysis_proper |> 
  group_by(country_cohort) |> 
  slice_sample(prop = 0.2, weight_by = naive_perswgt, replace = FALSE) |> 
  ungroup()

ames_provisional <- 
  slopes(
    m4_speed,
    variables = "isled_standard",
    by = "country_cohort",
    newdata = analysis_sample
  ) |> 
  tidy() |> 
  rename(ame = estimate, se_ame = std.error) |> 
  
  # add baseline marriage rates
  left_join(
    analysis_proper |> 
      group_by(country_cohort) |> 
      summarise(baseline_mar = weighted.mean(event, naive_perswgt, na.rm = TRUE)),
    by = "country_cohort"
  ) |> 
  
  mutate(
    rescaled_ame = (100 * ame) / baseline_mar,
    rescaled_se = (100 * se_ame) / baseline_mar,
    rescaled_conf.low = (100 * conf.low) / baseline_mar,
    rescaled_conf.high = (100 * conf.high) / baseline_mar
  ) 
  
modelling |> ames_provisional |> 
  separate(country_cohort, 
           into = c("country", "cohort"), 
           sep = "_", 
           remove = FALSE) |> 
  select(country_cohort, country, cohort, starts_with("rescaled")) |> 
  
  # add average marriage year by country-cohort
  left_join(
    analysis_grouped |>
      group_by(respid) |>
      filter(row_number() == 1) |>
      ungroup() |> 
      group_by(country_cohort) |> 
      summarise(avg_birth_cohort = weighted.mean(year, perswgt_mod, na.rm = TRUE)),
    by = "country_cohort"
  )  |> 
  
  # add macro-covariates
  left_join(
    macro_weighted |> select(country_cohort, educ_earnings_advantage, educ_unemployment_advantage, relative_lfp, cov_educ_unemployment_advantage, cov_educ_earnings_advantage, cov_relative_lfp),
    by = "country_cohort"
  )
  
  
```

## Margins plot

```{r margins-plot}
modelling <- modelling |> 
  mutate(region = countrycode(country, "country.name", "region23"))  |>  
  mutate(region = case_when(
    country == "United Kingdom" ~ "Western Europe",
    country == "United States" ~ "Western Europe",
    country == "Canada" ~ "Western Europe",
    country == "Estonia" ~ "Eastern Europe",
    country == "Lithuania" ~ "Eastern Europe",
    TRUE ~ region
  )) |> 
  mutate(region = case_when(
    region == "Eastern Europe" ~ "Central and Eastern Europe",
    region == "Western Europe" ~ "Western Europe and North America",
    TRUE ~ region
  ))

plots_by_region <- modelling |> filter(country_cohort != "Canada_after 2003") |> 
  group_split(region) |>
  map(~ {
    region_name <- unique(.x$region)
    
    ggplot(.x, aes(x = avg_birth_cohort, y = rescaled_ame)) +
      geom_line() +
      geom_point() +
      geom_hline(yintercept = 0, linetype = "solid", color = "grey50", linewidth = 1, alpha = 0.2) +
      scale_x_continuous(breaks = seq(1960, 2020, 10)) +
      facet_wrap(vars(country)) +
      labs(
        title = region_name,
        y = "Effect of education on marriage (pp)",
        x = "Birth cohort (avg. year of 15th birthday in cohort)"
      ) +
      theme_bw() +
      theme(panel.grid = element_blank())
  })

# Assign names based on the region (if not already named)
if (is.null(names(plots_by_region))) {
  names(plots_by_region) <- map_chr(plots_by_region, ~ unique(.x$data$region))
}

# Save each plot in the list
walk2(
  plots_by_region,
  names(plots_by_region),
  ~ ggsave(
      filename = paste0(output_plots, gsub(" ", "_", .y), ".png")), # replaces spaces with underscores
      plot = .x,
      width = 10,       # PowerPoint-friendly width
      height = 5.625,   # 16:9 aspect ratio
      dpi = 300         # high quality
    )
)
```
